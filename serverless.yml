service: aws-serverless-task-manager-api

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  lambdaHashingVersion: 20201221
  memorySize: 256
  stage: dev
  region: us-west-2

  environment:
    TASKS_TABLE: ${self:service}-${self:provider.stage}-tasks
    JWT_SECRET: ${self:custom.dotenvVars.JWT_SECRET}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
          Resource:
            - { "Fn::GetAtt": ["TasksTable", "Arn"] }

custom:
  dotenvVars: ${file(config.js)}

package:
  patterns:
    - config/**

functions:
  createTask:
    handler: src/handlers/createTask.createTask
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - httpApi:
          path: /tasks
          method: post
  getTasks:
    handler: src/handlers/getTasks.getTasks
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - httpApi:
          path: /tasks
          method: get
  getTask:
    handler: src/handlers/getTask.getTask
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - httpApi:
          path: /tasks/{id}
          method: get
  updateTask:
    handler: src/handlers/updateTask.updateTask
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - httpApi:
          path: /tasks/{id}
          method: put
  deleteTask:
    handler: src/handlers/deleteTask.deleteTask
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - httpApi:
          path: /tasks/{id}
          method: delete

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-typescript

resources:
  Resources:
    TasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TASKS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
